/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Restaurante;
import java.awt.Color;
import Clases.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josua
 */
public class VistaPedidos extends javax.swing.JFrame {

    /**
     * Creates new form VistaPedidos
     */
    Restaurante enlace;
    DefaultTableModel model;
    ArrayList<Pedido> lista;
    Cocinero cocinero; //para saber cual es el cocinero

    public VistaPedidos() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(150, 100, 150));
        enlace = iiproyecto.main.restaurante;
        model = (DefaultTableModel) elementos.getModel();
        lista = enlace.getColaPedidos();

        for (int i = 0; i < lista.size(); i++) {

            if (lista.get(i).getPlato() != null) { //si es un plato lo que hay en el pediod

                Object datos[] = {lista.get(i).getEstado(), lista.get(i).getPlato().getNombre(), lista.get(i).getPlato().getEstado(), buscarEnCocineros(lista.get(i).getPlato().getNombre())};
                model.addRow(datos);
            } else {                               //sino no
                Object datos[] = {lista.get(i).getEstado(), lista.get(i).getBebida().getNombre(), lista.get(i).getBebida().getEstado(), buscarEnCocineros(lista.get(i).getBebida().getNombre())};
                model.addRow(datos);
            }

        }

    }

    public String buscarEnCocineros(String nombre) {
        ArrayList<Empleado> temp = enlace.getEmpleados();
        for (int i = 0; i < temp.size(); i++) {

            if (temp.get(i) instanceof Cocinero) {
                Cocinero temporal = (Cocinero) temp.get(i);

                if (temporal.obtenerProductoPreparando().equals(nombre)) { //si esta preparando ese plato
                    return temporal.getNombre();

                }
            }

        }

        return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        elementos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        asignar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cedu = new javax.swing.JTextField();
        platosListos = new javax.swing.JButton();
        listos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PEDIDOS");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Lista de Pedidos Pendientes del Restaurante");

        elementos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estado Asignacion", "Producto", "Estado de Plato", "Cocinero a Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        elementos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elementosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(elementos);
        if (elementos.getColumnModel().getColumnCount() > 0) {
            elementos.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        asignar.setText("Buscar Cocinero");
        asignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Asignar Producto a Cocinero");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("CÃ©dula");

        platosListos.setText("Recoger");
        platosListos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platosListosActionPerformed(evt);
            }
        });

        listos.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        listos.setText("Recoger Platos Listos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(asignar)
                                .addGap(51, 51, 51)
                                .addComponent(platosListos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cedu, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(listos, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(listos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(asignar)
                        .addComponent(platosListos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cedu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        iiproyecto.main.ventana.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void asignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarActionPerformed
        // TODO add your handling code here:

        if (!cedu.getText().equals("")) {

            try {

                int num = Integer.parseInt(cedu.getText());
                cocinero = iiproyecto.main.restaurante.buscarCocinero(num);
                if (cocinero == null) {
                    JOptionPane.showMessageDialog(this, " La cÃ©dula ingresada no corresponde a ningÃºn cocinero ", " Alerta de sistema ", 0);

                } else {
                    JOptionPane.showMessageDialog(this, cocinero.getNombre() + " fue seleccionado ", " NotificaciÃ³n ", 1);

                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, " La cÃ©dula es un dato nÃºmerico ", " Alerta de sistema ", 0);
            } finally {
                cedu.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, " No ingreso ningÃºn nÃºmero  ", " Alerta de sistema ", 0);
        }


    }//GEN-LAST:event_asignarActionPerformed

    public void preguntaCocinero(String nombre,int select) {
        
        for (int i=select;i<lista.size();i++){
            
            if(model.getValueAt(i, 1).equals(nombre)){
                lista.get(i).setEstado(true);
                model.setValueAt(lista.get(i).getEstado(), i, 0);
                model.setValueAt(cocinero.getNombre(), i, 3);
                try{
                lista.get(i).getBebida().setEstado("preparaciÃ³n");
                model.setValueAt(lista.get(i).getBebida().getEstado(), i, 2);
                cocinero.setListaPedidos(lista.get(i));
                }
                
                catch(NullPointerException e){
                lista.get(i).getPlato().setEstado("preparacion");
                model.setValueAt(lista.get(i).getPlato().getEstado(), i, 2);
                cocinero.setListaPedidos(lista.get(i));
                }
            }
        
        }

    }

    private void elementosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elementosMouseClicked
        // TODO add your handling code here:
        String nom;
        int seleccion = elementos.getSelectedRow(); //fila seleccionada

        Bebida beb = lista.get(seleccion).getBebida();
        Plato plato = lista.get(seleccion).getPlato(); //accesando al pedido en esa posicion

        ArrayList<Empleado> temp = iiproyecto.main.restaurante.getEmpleados(); 

        if (plato != null) {

            if (cocinero.getListaPedidos().size() == 0) {

                cocinero.setListaPedidos(lista.get(seleccion));
                JOptionPane.showMessageDialog(this, " Se asigno el plato al cocinero ", " NotificaciÃ³n ", 1);
                 lista.get(seleccion).setEstado(true);
            } else {
                cocinero.setListaPedidos(lista.get(seleccion));
                JOptionPane.showMessageDialog(this, " El cocinero ya se encuentra preparando un plato, si es el mismo tipo de plato se agregarÃ¡ ", " NotificaciÃ³n ", 1);
                lista.get(seleccion).setEstado(true);
            }
            nom=lista.get(seleccion).getPlato().getNombre();

        } else{
            
            if (cocinero.getListaPedidos().size() ==0) {

            cocinero.setListaPedidos(lista.get(seleccion));
            JOptionPane.showMessageDialog(this, " Se asigno el plato al cocinero ", " NotificaciÃ³n ", 1);
            lista.get(seleccion).setEstado(true);
        }
            else {
                
            }
            cocinero.setListaPedidos(lista.get(seleccion));
            JOptionPane.showMessageDialog(this, " El cocinero ya se encuentra preparando un plato, si es el mismo tipo de plato se agregarÃ¡ ", " NotificaciÃ³n ", 1);
            lista.get(seleccion).setEstado(true);
            
            nom=lista.get(seleccion).getBebida().getNombre();
        }
        
        try {

            lista.get(seleccion).getBebida().setEstado("preparacion");
            model.setValueAt(lista.get(seleccion).getBebida().getEstado(), seleccion, 2);
            model.setValueAt(lista.get(seleccion).getEstado(), seleccion, 0);
            model.setValueAt(cocinero.getNombre(), seleccion, 3);
        } catch (NullPointerException e) {
            lista.get(seleccion).getPlato().setEstado("preparacion");
            model.setValueAt(lista.get(seleccion).getPlato().getEstado(), seleccion, 2);
            model.setValueAt(lista.get(seleccion).getEstado(), seleccion, 0);
            model.setValueAt(cocinero.getNombre(), seleccion, 3);
        }
        
       
        preguntaCocinero(nom,seleccion+1);

    




    }//GEN-LAST:event_elementosMouseClicked

    private void platosListosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_platosListosActionPerformed
        // TODO add your handling code here:
        int x=0;
        int tam=lista.size();
        for (int i = 0; i <tam; i++) {
           //si el plato esta listo;
               if (model.getValueAt(0, 2).equals("listo")){
                    
                    
                    model.removeRow(0);  //se elimina la fila
                    enlace.sacarDecola(); //se saca de la cola de pedidos
                    x++;
                
         
            }
               else{
               break;
               }
        }
        
        if (x==0){
        JOptionPane.showMessageDialog(this," No existen productos listos para entregar ", " Alerta de sistema", 0);
        }
        else{
       JOptionPane.showMessageDialog(this," Los platos listos fueron entregados al mesero ", " NotificaciÃ³n", 1);
        }
        
    }//GEN-LAST:event_platosListosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPedidos.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPedidos.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPedidos.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPedidos.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignar;
    private javax.swing.JTextField cedu;
    private javax.swing.JTable elementos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listos;
    private javax.swing.JButton platosListos;
    // End of variables declaration//GEN-END:variables
}
